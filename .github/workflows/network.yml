name: Terraform Network

on:
  push:
    branches: [main]
    paths:
      - 'terraform/module/network_skeleton/**'
      - 'terraform/wrapper/network_skeleton/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to run (apply or destroy)'
        required: true
        default: 'apply'

jobs:
  terraform-network:
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: terraform/wrapper/network_skeleton
      ACTION: ${{ github.event_name == 'push' && 'apply' || github.event.inputs.action }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Run Checkov on Network module
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform/module/network_skeleton

      - name: Run Checkov on Network wrapper
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform/wrapper/network_skeleton

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        if: ${{ env.ACTION == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan

      - name: Terraform Apply
        if: ${{ env.ACTION == 'apply' && github.ref == 'refs/heads/main' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ env.ACTION == 'destroy' && github.ref == 'refs/heads/main' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform destroy -auto-approve
