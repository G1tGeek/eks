name: Build/Remove Node API

on:
  push:
    paths:
      - 'node-api/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose build-push or remove'
        required: true
        default: 'build-push'
        type: choice
        options:
          - build-push
          - remove
      image_tag:
        description: 'Docker image tag to build or remove'
        required: false
        default: latest

jobs:
  manage-ecr-image:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-northeast-1
      ECR_REPOSITORY: node-api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Docker Image
        if: ${{ github.event.inputs.action == 'build-push' }}
        run: |
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${ECR_REPOSITORY}
          IMAGE_TAG=${{ github.event.inputs.image_tag }}
          docker build -t $ECR_URI:$IMAGE_TAG node-api
          docker tag $ECR_URI:$IMAGE_TAG $ECR_URI:latest
          docker push $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:latest

      - name: Remove Docker Image from ECR
        if: ${{ github.event.inputs.action == 'remove' }}
        run: |
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${ECR_REPOSITORY}
          IMAGE_TAG=${{ github.event.inputs.image_tag }}
          echo "Deleting image $ECR_URI:$IMAGE_TAG from ECR"
          aws ecr batch-delete-image \
            --repository-name ${ECR_REPOSITORY} \
            --image-ids imageTag=$IMAGE_TAG || echo "Image not found"
